#ifndef QOS_CONFIG_H
#define QOS_CONFIG_H

/* 10kB buffer for the heap should be enough for everyone */
#ifndef TLSF_BUFFER
#define TLSF_BUFFER     (10240)
#endif

/* m3-289 */
#ifndef ROOTADDR
#define ROOTADDR "15:11:6B:10:65:F4:B4:26"
#endif
#ifndef ROOTPFX
#define ROOTPFX "HK"
#endif
#define ROOTPREFIX ("/" ROOTPFX)
#ifndef CONSUMER_THREAD_PRIORITY
#define CONSUMER_THREAD_PRIORITY (THREAD_PRIORITY_MAIN - 1)
#endif
#ifndef CCNL_THREAD_PRIORITY
#define CCNL_THREAD_PRIORITY (THREAD_PRIORITY_MAIN - 3)
#endif

#ifndef DELAY_REQUEST
#define DELAY_REQUEST           (10 * 1000000)
#endif
#ifndef DELAY_JITTER
#define DELAY_JITTER            (2 * 1000000)
#endif
#define DELAY_MAX               (DELAY_REQUEST + DELAY_JITTER)
#define DELAY_MIN               (DELAY_REQUEST - DELAY_JITTER)
#ifndef REQ_DELAY
#define REQ_DELAY               (random_uint32_range(DELAY_MIN, DELAY_MAX))
#endif
#ifndef REQ_NUMS
//#define REQ_NUMS (110 * 30)
#define REQ_NUMS (510 * 30)
#endif

#ifndef ACTUATOR_DELAY_REQUEST
#define ACTUATOR_DELAY_REQUEST  (5 * 1000000)
#endif
#ifndef ACTUATOR_DELAY_JITTER
#define ACTUATOR_DELAY_JITTER   (1 * 1000000)
#endif
#define ACTUATOR_DELAY_MAX      (ACTUATOR_DELAY_REQUEST + ACTUATOR_DELAY_JITTER)
#define ACTUATOR_DELAY_MIN      (ACTUATOR_DELAY_REQUEST - ACTUATOR_DELAY_JITTER)
#ifndef ACTUATOR_DELAY
#define ACTUATOR_DELAY          (random_uint32_range(ACTUATOR_DELAY_MIN, ACTUATOR_DELAY_MAX))
#endif
#ifndef ACTUATOR_NUMS
#define ACTUATOR_NUMS (200)
//#define ACTUATORS_NUMS (1000)
#endif

#define DELAY_REQUEST_SHORT1           (5 * 1000000)
#define DELAY_MAX_SHORT1               (DELAY_REQUEST_SHORT1 + DELAY_JITTER)
#define DELAY_MIN_SHORT1               (DELAY_REQUEST_SHORT1 - DELAY_JITTER)
#define REQ_DELAY_SHORT1               (random_uint32_range(DELAY_MIN_SHORT1, DELAY_MAX_SHORT1))
#define REQ_NUMS_SHORT1                (220 * 30)

#define ACTUATOR_DELAY_REQUEST_SHORT1  (25 * 100000)
#define ACTUATOR_DELAY_JITTER_SHORT1   (1 * 1000000)
#define ACTUATOR_DELAY_MAX_SHORT1      (ACTUATOR_DELAY_REQUEST_SHORT1 + ACTUATOR_DELAY_JITTER_SHORT1)
#define ACTUATOR_DELAY_MIN_SHORT1      (ACTUATOR_DELAY_REQUEST_SHORT1 - ACTUATOR_DELAY_JITTER_SHORT1)
#define ACTUATOR_DELAY_SHORT1          (random_uint32_range(ACTUATOR_DELAY_MIN_SHORT1, ACTUATOR_DELAY_MAX_SHORT1))
#define ACTUATOR_NUMS_SHORT1           (400)

#define ACTUATOR_DELAY_REQUEST_SHORT2  (4 * 1000000)
#define ACTUATOR_DELAY_JITTER_SHORT2   (1 * 1000000)
#define ACTUATOR_DELAY_MAX_SHORT2      (ACTUATOR_DELAY_REQUEST_SHORT2 + ACTUATOR_DELAY_JITTER_SHORT2)
#define ACTUATOR_DELAY_MIN_SHORT2      (ACTUATOR_DELAY_REQUEST_SHORT2 - ACTUATOR_DELAY_JITTER_SHORT2)
#define ACTUATOR_DELAY_SHORT2          (random_uint32_range(ACTUATOR_DELAY_MIN_SHORT2, ACTUATOR_DELAY_MAX_SHORT2))
#define ACTUATOR_NUMS_SHORT2           (250)

#define ACTUATOR_DELAY_REQUEST_SHORT3  (3 * 1000000)
#define ACTUATOR_DELAY_JITTER_SHORT3   (1 * 1000000)
#define ACTUATOR_DELAY_MAX_SHORT3      (ACTUATOR_DELAY_REQUEST_SHORT3 + ACTUATOR_DELAY_JITTER_SHORT3)
#define ACTUATOR_DELAY_MIN_SHORT3      (ACTUATOR_DELAY_REQUEST_SHORT3 - ACTUATOR_DELAY_JITTER_SHORT3)
#define ACTUATOR_DELAY_SHORT3          (random_uint32_range(ACTUATOR_DELAY_MIN_SHORT3, ACTUATOR_DELAY_MAX_SHORT3))
#define ACTUATOR_NUMS_SHORT3           (333)

#define ACTUATOR_DELAY_REQUEST_SHORT4  (2 * 1000000)
#define ACTUATOR_DELAY_JITTER_SHORT4   (1 * 1000000)
#define ACTUATOR_DELAY_MAX_SHORT4      (ACTUATOR_DELAY_REQUEST_SHORT4 + ACTUATOR_DELAY_JITTER_SHORT4)
#define ACTUATOR_DELAY_MIN_SHORT4      (ACTUATOR_DELAY_REQUEST_SHORT4 - ACTUATOR_DELAY_JITTER_SHORT4)
#define ACTUATOR_DELAY_SHORT4          (random_uint32_range(ACTUATOR_DELAY_MIN_SHORT4, ACTUATOR_DELAY_MAX_SHORT4))
#define ACTUATOR_NUMS_SHORT4           (500)

#define ACTUATOR_DELAY_REQUEST_SHORT5  (1 * 1000000)
#define ACTUATOR_DELAY_JITTER_SHORT5   (1 * 1000000)
#define ACTUATOR_DELAY_MAX_SHORT5      (ACTUATOR_DELAY_REQUEST_SHORT5 + ACTUATOR_DELAY_JITTER_SHORT5)
#define ACTUATOR_DELAY_MIN_SHORT5      (ACTUATOR_DELAY_REQUEST_SHORT5 - ACTUATOR_DELAY_JITTER_SHORT5)
#define ACTUATOR_DELAY_SHORT5          (random_uint32_range(ACTUATOR_DELAY_MIN_SHORT5, ACTUATOR_DELAY_MAX_SHORT5))
#define ACTUATOR_NUMS_SHORT5           (1000)

#define REQ_DELAY_VAL           REQ_DELAY
#define REQ_NUMS_VAL            REQ_NUMS
#define ACTUATOR_DELAY_VAL      ACTUATOR_DELAY
#define ACTUATOR_NUMS_VAL       ACTUATOR_NUMS

#endif /* QOS_CONFIG_H */
